[{"title":"ORACLE数据库学习记录","date":"2017-04-02T01:53:13.000Z","path":"2017/04/02/ORACLE数据库学习记录/","text":"这篇文章是记录“ORACLE数据库”学习过程中的总结，更新中···授课老师：刘波书籍：《大型数据库（ORACLE）与实训》 （一）1.ORACLE启动的三个步骤 startup nomount alter database mount alter database open 注：startup直接启动三个阶段，不能直接启动到mount阶段 2.指定参数文件来启动oracle首先创建一个参数文件：1SQL&gt;create pfile='/home/oracle/zhangqin.ora' from spfile 再启动：123SQL&gt;startup pfile='/home/oracle/zhangqin.ora' nomountSQL&gt;alter database mountSQL&gt;alter database open 注意：startup启动全部阶段。 3.oracle的实例包含了进程和内存，在实例启动阶段启动了哪些进程首先将oracle启动到实例：12SQL&gt;startup nomountSQL&gt;! 再查看进程：1[oracle@DevServer ~]$ ps -aef | grep ora_ 4.oracle的$ORACLE_SID与启动实例之间的关系$ORACLE_SID不同，可以启动不同的实例 进入.bash_profile(oracle目录下)修改ORACLE_SID： 再通过以下命令查看$ORACLE_SID变化成上面修改的dbtest：12345[oracle@DevServer ~]$ su - rootPassword:[root@DevServer ~]# su - oracle[oracle@DevServer ~]$ echo $ORACLE_SIDdbtest 5.oracle实例与参数文件（spfile文件和init文件之间的关系）将spfile更名，看能不能启动实例，将init文件更名，看能不能启动实例使用 1SQL&gt;show parameter spfile 查看value值，有就代表spfile启动。 6.可以用这样的语句：“alter system set 参数名=参数值”，来修改spfile的值本实例中修改成功，重启后不失效： 1SQL&gt;alter system set pga_aggregate_target=1024m 本实例中不生效，重启后生效： 1SQL&gt;alter system set pga_aggregate_target=2048m scope=spfile 本实例中生效，重启后失效： 1SQL&gt;alter system set pga_aggregate_target=300m scope=memory 本实例中生效，重启后不失效： 1SQL&gt;alter system set pga_aggregate_target=300m scope=both 注意：类似的还有session,system是针对整个oracle系统，而session是针对当前回话。 7.从spfile中创建pfile文件，从pfile中创建spfile文件默认目录下建立1SQL&gt;create pfile from spfile 在$ORACLE_HOME/dbs/下通过以下命令可以查找到： 1$ ls -la | grep pfile 指定目录下建立1SQL&gt;create pfile='/tmp/initorcl.ora' from spfile 注意：建立spfile同理可得，但是建立spfile默认目录时，要将oracle关闭掉，因为oracle正常启动第一顺序用的是spfile，这是亲身试验所得。 8.查看启动到nomount阶段时所输出的alert日志（bdump）查看路径($ORACLE_BASE/admin/orcl)： 1SQL&gt;show parameter dump_dest 进入bdump: 1vi alert_orcl.log （一）小结●spfile：只改变spfile的设置，不改变当前实例运行，重新启动数据库后生效（只修改参数文件）；●memory：只改变当前实例运行，重新启动数据库后失效（写内存立即生效）；●both：同时改变实例及spfile，当前更改立即生效，重新启动数据库后仍然有效（两者都修改）。如果是deferred：表示这次修改对当前执行会话中不发生作用，在以后打开的会话中起作用，故它有“推迟”影响的效果。如果是false：表示不能使用alter system命令修改。Alert_log是Oracle数据库运行阶段的运行日志在Oracle工作时，会将所有会影响到整体性能的操作、变化和错误信息记录在一个日志中，就是Alert_log Alert_Log是进行数据库故障诊断、监控和调整的重要研究对象。根据系统参数可以获取到alert_log的路径，文件名默认为alert_&lt;sid&gt;.log，其中sid为数据库的唯一标志。在实验环境中，数据库名称alert_wilson.log。SQL&gt; select status from v$instance;查看版本号：SQL&gt;select * from v$version","tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"},{"name":"ORACLE","slug":"ORACLE","permalink":"http://yoursite.com/tags/ORACLE/"},{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/tags/数据库/"},{"name":"记录","slug":"记录","permalink":"http://yoursite.com/tags/记录/"}]},{"title":"电脑小问题及解决方法","date":"2017-03-11T13:55:00.000Z","path":"2017/03/11/电脑小问题及解决方法/","text":"这个是我的电脑遇到的各种问题，更新中··· 1、电脑突然没声音了，网易云提示：播放失败请在设置中切换输出设备解决方案：【开始】-【控制面板】-【管理工具】-【服务】-【Windows Audio】重新启动 2、office2016 word文档突然出现未知图标解决方案：【控制面板】—【程序】—【设置默认程序】—【选中word2016】—【选择此程序的默认值】—【全部打勾】—【确认完成】 3、win10自动更新解决方案：按WIN+R 打开运行，输入 services.msc 回车 然后找到 “Windows updata”服务，双击后设置为禁用，应用即可。 4、IE浏览器突然不能上网了，但是其他浏览器可以，QQ什么的也都正常，只有IE是出现：远程计算机或设备将不接受连接解决方案： WIN+R 打开运行，输入regedit 打开注册表 查找Internet Settings（在HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings） 删除Internet Settings下的Connection文件夹 重启IE，完美解决问题 5、重新安装OFFICE2016或者2013版本，如何将旧版本卸载干净解决方案： 下载微软提供的OFFICE卸载软件，O15CTRRemove.diagcab 全部下一步，他会卸载电脑里面所有OFFICE相关的 再重新安装，就不会出现错误了 6、看Google Chrome浏览器的缓存文件解决方案： 启动谷歌浏览器，在地址栏中输入：chrome://version 找到个人资料路径 打开，音乐一般在Media Cache","tags":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"},{"name":"记录","slug":"记录","permalink":"http://yoursite.com/tags/记录/"},{"name":"电脑","slug":"电脑","permalink":"http://yoursite.com/tags/电脑/"}]},{"title":"image & music","date":"2017-03-10T10:48:38.000Z","path":"2017/03/10/image-music/","text":"","tags":[]},{"title":"github+hexo创建个人博客总结","date":"2017-03-10T10:23:05.000Z","path":"2017/03/10/github-hexo创建个人博客总结/","text":"前言在准备期间，在网上翻阅了大量的github+hexo教程，但是有些不是很全，导致开始一头雾水，后来找到两篇教程终于能够让我看懂的了，如下链接： link onelink two根据网上的教程和自己的经历，以下是我对这个过程的小结，以防自己忘记，和一些过程中遇到的问题。 准备工作Windows10Node.jsGitHexo（当我在进行这步时，我用的git shell做的相关命令，当然后来发现不行，还是用git bash比较好） 创建一个仓库这个很简单，需要注意的是，第一个点前面必须是你的github的用户名，比如：saralavigne6.github.io 配置ssh key通过配置ssh key来解决本地和服务器的连接问题。 $ cd ~/. ssh #检查本机已存在的ssh密钥 $ ssh-keygen -t rsa -C“邮件地址“ 在用户目录下，打开用户目录, .ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt;SSH and GPG keys-&gt; New SSH key $ ssh -T git@github.com # 注意邮箱地址不用改&gt;yes&gt;You&#39;ve successfully authenticated, but GitHub does not provide shell access. 安装hexo新建一个用于写博客的文件夹/G/blog,如下命令均在git bash中。 桌面上右击选中git bash: $ npm install -g hexo #全局安装 $ cd / g/blog $ hexo init #执行后，blog文件下自动下载了很多文件 在/ g/blog中右击选择git bash输入以下命令: $ hexo g # 生成 $ hexo s # 启动服务，便可以在 http://localhost:4000 中看默认的主题 如果你要上传,$ hexo g 后，再$ hexo d，就可以在https://saralavigne6.github.io中访问了 换主题在g/blog下面，右击打开git bash $ git clone https://······#主题的https，网上很多主题，下 载后在G/blog/themes下面，我是yilia,然后修改G/blog中的配 置文件_config.yml: 将theme:landscape改为theme:yilia，将blog中配置文件改成如下，repository是表示你所建立的仓库的链接： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/saralavigne6/saralavigne6.github.io.git branch: master 然后$ hexo g,$ hexo d上传成功。 以上是对整个搭建过程的简单介绍，以防我忘记，下面总结下我遇到的问题和注意事项： 一定按照教程用git bash,因为我用git shell产生了不可描述的错误； deploy:下面的type应为type:git; 头像之类的图片在配置文件里面设置路径； 主页上面的“随笔”开始不知道怎么设置，后来思考了一下，“随笔”在tags下面，就在测试文章里加了一个标签“随笔”提交后，点击主页上的“随笔”显示包含标签为“随笔”的文章； 开始页面上出现中文乱码，后来Sublime Text编辑文档之类的就行了，不用记事本打开。 邮箱：mailto:ihateyou1692783558@Hotmail.com; 音乐外链播放器 博客中插入图片 首先在blog目录下确认 _config.yml中有 post_asset_folder:true 之后再使用hexo new &#39;new&#39; 创建新博客的时候，会在source/_posts里面创建.md文件的同时生成一个相同的名字的文件夹，把该文章中需要使用的图片放在该文件夹下即可，使用时：！[ ] (new/text.jpg) 添加标签页面 $ hexo new page tags #输入命令后，blog/sourse下会生成一个新文件夹tags,下面会有一个index.md,然后设置页面类型，添加type :”tags”，如下：--- title: tags date: 2016-11-15 19:10:05 type: &quot;tags&quot; --- 然后就可以在文章（位于blog/sourse/_post）中用标签了--- title: 基于Hexo和Github搭建博客 date: 2016-11-09 tags: [npm, hexo, github] categories: 搭建博客 --- 添加分类页面 $ hexo new page categories #输入命令后，blog/sourse下会生成一个新文件夹categories,下面会有一个index.md，然后设置页面类型，添加type :” categories ”，如下：--- title: categories date: 2016-11-15 19:11:13 type: &quot;categories&quot; -- 然后就可以在文章（位于blog/sourse/_post）中用分类了--- title: 基于Hexo和Github搭建博客 date: 2016-11-09 tags: [npm, hexo, github] categories: 搭建博客 --- 配置文件_config.yml1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Qin Zhang's blogsubtitle: \"前端 JavaScript PS\"description: This is my blog.author: Qin Zhanglanguage: zh-CNtimezone:# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://yoursite.comroot: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: truerelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: true tab_replace:# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: yilia# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/saralavigne6/saralavigne6.github.io.git branch: masterjsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true","tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"},{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"Hello World","date":"2017-03-07T04:40:22.841Z","path":"2017/03/07/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]